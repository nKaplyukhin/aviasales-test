{"version":3,"sources":["axios/axios.js","redux/reduxStore.js","redux/ticketsSelector.js","images/logo.svg","Header/Header.jsx","Navbar/Navbar.jsx","Tickets/Ticket/Ticket.jsx","Tickets/Tickets.jsx","Tickets/TicketsContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","baseURL","ticketsAxios","searchId","get","then","response","data","SET_TICKETS","SET_SEARCH_ID","INITIAL_SUCCESS","CHANGE_SORTING","CHANGE_FILTER","initState","tickets","initialSuccess","filter","all","noneTransfer","oneTransfer","twoTransfer","threeTransfer","sorting","createStore","state","action","type","applyMiddleware","thunk","getFilter","getTicketsFilter","createSelector","ticket","segments","stops","length","noneTransferFilter","oneTransferFilter","twoTransferFilter","threeTransferFilter","Header","props","className","src","logo","alt","ListItem","changeFilter","text","filterData","checked","onChange","addFilter","Navbar","RouteInfo","min","dateOpen","Date","date","dateClose","getTime","duration","convertDate","getHours","getMinutes","title","origin","destination","Math","floor","transfer","join","RouteItem","Ticket","price","carrier","map","segment","index","Tickets","changeSorting","size","scrollHeight","ticketElements","sort","a","b","i","onClick","slice","TicketsContainer","this","getTickets","React","Component","App","document","documentElement","offsetHeight","window","innerHeight","getSearchId","addEventListener","pageYOffset","setState","prevProps","prevState","connect","dispatch","status","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f6d8887f.chunk.js","sourcesContent":["import * as axios from 'axios';\n\nlet instance =  axios.create({\n    baseURL: `https://front-test.beta.aviasales.ru/`\n})\n\nexport const ticketsAxios = {\n    getTickets: (searchId) => {\n        return instance.get(`tickets?searchId=${searchId}`)\n    },\n    getSearchId: () => {\n        return instance.get(`search `)\n            .then(response => response.data)\n    }\n}","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { ticketsAxios } from \"../axios/axios\";\n\nconst SET_TICKETS = \"SET_TICKETS\";\nconst SET_SEARCH_ID = \"SET_SEARCH_ID\";\nconst INITIAL_SUCCESS = \"INITIAL_SUCCESS\";\nconst CHANGE_SORTING = \"CHANGE_SORTING\";\nconst CHANGE_FILTER = \"CHANGE_FILTER\";\n\nlet initState = {\n    tickets: [],\n    searchId: null,\n    initialSuccess: false,\n    filter: {\n        all: true,\n        noneTransfer: false,\n        oneTransfer: false,\n        twoTransfer: false,\n        threeTransfer: false\n    },\n    sorting: \"cheap\"\n};\n\nlet reducer = (state = initState, action) => {\n    switch (action.type) {\n        case SET_SEARCH_ID:\n            return {\n                ...state,\n                searchId: action.searchId\n            }\n        case SET_TICKETS:\n            return {\n                ...state,\n                tickets: action.data,\n            }\n        case INITIAL_SUCCESS:\n            return {\n                ...state,\n                initialSuccess: true\n            }\n        case CHANGE_SORTING:\n            return {\n                ...state,\n                sorting: action.sorting\n            }\n        case CHANGE_FILTER:\n            return {\n                ...state,\n                filter: {\n                    ...state.filter,\n                    ...action.filter\n                }\n            }\n        default:\n            return state\n    }\n}\n\nconst setTickets = (data) => ({ type: SET_TICKETS, data });\nconst setSearchId = (searchId) => ({ type: SET_SEARCH_ID, searchId });\nconst initialSuccess = () => ({ type: INITIAL_SUCCESS });\nexport const changeSorting = (sorting) => ({ type: CHANGE_SORTING, sorting });\nexport const changeFilter = (filter) => ({ type: CHANGE_FILTER, filter });\n\nexport const getTickets = searchId => async dispatch => {\n    let response = await ticketsAxios.getTickets(searchId);\n    if (response.status === 200) {\n        dispatch(initialSuccess());\n        dispatch(setTickets(response.data.tickets));\n    }\n    else alert(\"ОШИБКА!!! Перезагрузите страницу\")\n}\nexport const getSearchId = () => async dispatch => {\n    let data = await ticketsAxios.getSearchId();\n    dispatch(setSearchId(data.searchId));\n}\n\nexport default createStore(reducer, applyMiddleware(thunk))","import { createSelector } from \"reselect\"\n\nexport const getTicketsSelector = state => { return state.tickets }\nexport const getFilter = (state) => { return state.filter }\n\nconst noneTransferFilter = (ticket, filter) => {\n    return filter.noneTransfer \n        && ((!ticket.segments[0].stops.length \n            && !ticket.segments[1].stops.length))\n}\nconst oneTransferFilter = (ticket, filter) => {\n    return filter.oneTransfer \n        && ((ticket.segments[0].stops.length === 1 \n            && ticket.segments[1].stops.length === 1))\n}\nconst twoTransferFilter = (ticket, filter) => {\n    return filter.twoTransfer \n    && ((ticket.segments[0].stops.length === 2 \n            && ticket.segments[1].stops.length === 2))\n}\nconst threeTransferFilter = (ticket, filter) => {\n    return filter.threeTransfer \n        && ((ticket.segments[0].stops.length === 3 \n            && ticket.segments[1].stops.length === 3))\n}\n\nexport const getTicketsFilter = createSelector(getTicketsSelector, getFilter, (tickets, filter) => {\n    if (filter.all) return tickets;\n    else {\n        return tickets.filter(ticket => \n            noneTransferFilter(ticket, filter)\n            || oneTransferFilter(ticket, filter)\n            || twoTransferFilter(ticket, filter)\n            || threeTransferFilter(ticket, filter)\n        )\n    };\n})\n","export default __webpack_public_path__ + \"static/media/logo.6e2e8894.svg\";","import React from \"react\"\nimport './Header.css';\nimport logo from '../images/logo.svg'\n\nconst Header = (props) => {\n    return (\n        <div className=\"header\">\n            <img src={logo} alt=\"\" className=\"header__logo\"/>\n        </div>\n    )\n}\n\nexport default Header\n","import React from \"react\"\nimport './Navbar.css';\n\nlet Navbar = ({ filter, changeFilter }) => (\n  <div className=\"navbar\">\n    <div className=\"navbar__header\">\n      <div className=\"navbar__title\">\n            Количество пересадок\n      </div>\n    </div>\n    <div className=\"navbar-filter\">\n      <ul className=\"navbar-filter__list\">\n\n        <ListItem filter={filter.all}\n          changeFilter={changeFilter}\n          text=\"Все\"\n          filterData={{ all: true }} />\n\n        <ListItem filter={filter.noneTransfer}\n          changeFilter={changeFilter}\n          text=\"Без пересадок\"\n          filterData={{ noneTransfer: !filter.noneTransfer }} />\n\n        <ListItem filter={filter.oneTransfer}\n          changeFilter={changeFilter}\n          text=\"1 пересадка\"\n          filterData={{ oneTransfer: !filter.oneTransfer }} />\n\n        <ListItem filter={filter.twoTransfer}\n          changeFilter={changeFilter}\n          text=\"2 пересадки\"\n          filterData={{ twoTransfer: !filter.twoTransfer }} />\n\n        <ListItem filter={filter.threeTransfer}\n          changeFilter={changeFilter}\n          text=\"3 пересадки\"\n          filterData={{ threeTransfer: !filter.threeTransfer }} />\n\n      </ul>\n    </div>\n  </div>\n)\n\nlet ListItem = ({ filter, changeFilter, text, filterData }) => {\n\n  let addFilter = (filter) => {\n    if (filter.all)\n      filter = {\n        all: true,\n        noneTransfer: false,\n        oneTransfer: false,\n        twoTransfer: false,\n        threeTransfer: false\n      }\n    else {\n      filter = {\n        ...filter, all: false\n      }\n    }\n    changeFilter(filter)\n  }\n\n  return (\n    <li className=\"navbar-filter__list__item\">\n      <label className=\"navbar-filter__check\">\n        <input type=\"checkbox\" checked={filter}\n          onChange={() => { addFilter(filterData) }} />\n        <div className=\"navbar-filter__check-button\" />\n        <div className=\"navbar-filter__text\">{text}</div>\n      </label>\n    </li>\n  )\n}\n\nexport default Navbar","import React from \"react\"\nimport \"./Ticket.css\"\n\nlet Ticket = (props) => {\n    return (\n        <div className=\"ticket\">\n            <div className=\"ticket__header\">\n                <div className=\"ticket__price\">\n                    {props.price} Р\n                </div>\n                <div className=\"ticket__logo\">\n                    <img src={`//pics.avs.io/99/36/${props.carrier}.png`}\n                        alt=\"Логотип компании\" />\n                </div>\n            </div>\n            <div className=\"route-block\">\n                {props.segments.map((segment, index) => <RouteInfo key={index} {...segment} />)}\n            </div>\n        </div>\n    )\n}\n\nlet RouteInfo = (props) => {\n    let dateOpen = new Date(props.date)\n    let dateClose = new Date(dateOpen.getTime() + (props.duration * 1000 * 60))\n\n    let convertDate = (date) => {\n        return `${date.getHours()}:${date.getMinutes()}`\n    }\n\n    let convertTime = (min) => {\n        return `${Math.floor(min / 60)} ч ${min % 60} мин`\n    }\n\n    let transfer = (stops) => {\n        switch (stops.length) {\n            case 0: return \"без пересадок\"\n            case 1: return \"1 пересадка\"\n            case 2: return \"2 пересадки\"\n            case 3: return \"3 пересадки\"\n            default:\n                break;\n        }\n    }\n    return (\n        <div className=\"route\">\n            <RouteItem title={props.origin + \" – \" + props.destination} \n                text={convertDate(dateOpen) + \" – \" + convertDate(dateClose)}/>\n            <RouteItem title=\"В пути\"\n                text={convertTime(props.duration)}/>\n            <RouteItem title={transfer(props.stops)}\n                text={props.stops.join(', ')}/>\n        </div>\n    )\n}\n\nlet RouteItem = ({title, text}) => {\n    return (\n        <div className=\"route__item\">\n            <div className=\"route__title\">\n                {title}\n            </div>\n            <div className=\"route__text\">\n                {text}\n            </div>\n        </div>\n    )\n}\n\nexport default Ticket;","import React, { useEffect, useState } from \"react\"\nimport Ticket from \"./Ticket/Ticket\"\nimport \"./Tickets.css\"\n\nlet Tickets = ({ tickets, sorting, changeSorting, initialSuccess, scrollHeight, size }) => {\n    let sortTickets = [...tickets].sort((a, b) => {\n        if (sorting === \"cheap\") return a.price - b.price\n        else if (sorting === \"quick\")\n            return a.segments[0].duration + a.segments[1].duration - (b.segments[0].duration + b.segments[1].duration)\n        else return \"\"\n    })\n\n    let ticketElements = sortTickets.map((ticket, i) => {\n        return <Ticket key={i} {...ticket} />\n    });\n\n    return (\n        <div className=\"main-content\">\n            <div className=\"main-content__header\">\n                <div className={`main-content__item \n                        ${sorting === \"cheap\" && \"main-content__item_active\"}`}\n                    onClick={() => { changeSorting(\"cheap\") }}>\n                    <div className=\"main-content__item__text\">Самый дешевый</div>\n                </div>\n                <div className={`main-content__item\n                        ${sorting === \"quick\" && \"main-content__item_active\"}`}\n                    onClick={() => { changeSorting(\"quick\") }}>\n                    <div className=\"main-content__item__text\">Самый быстрый</div>\n                </div>\n            </div>\n            {initialSuccess && ticketElements.slice(0, size)}\n        </div>\n    )\n}\n\nexport default Tickets","import React from \"react\"\nimport Tickets from \"./Tickets\"\nimport \"./Tickets.css\"\n\nclass TicketsContainer extends React.Component {\n    componentDidMount() {\n        if (!this.props.initialSuccess) this.props.getTickets(this.props.searchId)\n    }\n    changeSorting = (sorting) => {\n        this.props.changeSorting(sorting)\n    }\n    render() {\n        return (\n            <Tickets tickets={this.props.tickets}\n                sorting={this.props.sorting}\n                changeSorting={this.changeSorting} \n                initialSuccess={this.props.initialSuccess}\n                scrollHeight={this.props.scrollHeight}\n                size={this.props.size}/>\n        )\n    }\n}\n\nexport default TicketsContainer;","import React from \"react\"\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { getSearchId, getTickets, changeSorting, changeFilter } from \"./redux/reduxStore\";\nimport { getFilter, getTicketsFilter } from \"./redux/ticketsSelector\"\nimport Header from \"./Header/Header\";\nimport Navbar from \"./Navbar/Navbar\";\nimport TicketsContainer from \"./Tickets/TicketsContainer\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getSearchId()\n    window.addEventListener(\"scroll\", () => {\n      if (window.pageYOffset >= this.state.scrollHeight)\n          this.setState({\n            size: this.state.size+25\n          })\n    })\n  }\n  state = {\n    scrollHeight: document.documentElement.offsetHeight-window.innerHeight,\n    size: 25\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.tickets.length !== this.props.tickets.length\n      || prevState.size !== this.state.size) {\n      this.setState({\n        scrollHeight: document.documentElement.offsetHeight-window.innerHeight\n      })\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"main\">\n          <Navbar filter={this.props.filter}\n            changeFilter={this.props.changeFilter} />\n          {this.props.searchId\n            && <TicketsContainer tickets={this.props.tickets}\n              searchId={this.props.searchId}\n              getTickets={this.props.getTickets}\n              changeSorting={this.props.changeSorting}\n              sorting={this.props.sorting}\n              initialSuccess={this.props.initialSuccess}\n              scrollHeight={this.state.scrollHeight}\n              size={this.state.size}\n            />}\n        </div>\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    tickets: getTicketsFilter(state),\n    filter: getFilter(state),\n    searchId: state.searchId,\n    initialSuccess: state.initialSuccess,\n    sorting: state.sorting\n  }\n}\n\nexport default connect(mapStateToProps, { getSearchId, getTickets, changeSorting, changeFilter })(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/reduxStore\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}